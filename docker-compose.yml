services:
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: messenger
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: ./DB-service
      dockerfile: dockerfile
    depends_on:
      - rabbitmq
      - postgres
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://rabbitmq:15672"]
      interval: 10s
      timeout: 5s
      retries: 5

  ocelot-gateway:
    image: ocelot-gateway:latest
    build:
      context: .
    ports:
      - "5000:5000"
    depends_on:
      - app
      - postgres
    networks:
      - my-network

networks:
  app-network:
    driver: bridge